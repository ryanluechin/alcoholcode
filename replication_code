# Install and load necessary packages
packlist <- c("haven", "lmtest", "sandwich", "wooldridge", "ivreg", "dplyr", "tidyr", "psych", "broom", "kableExtra")
install.packages(packlist[!(packlist %in% installed.packages()[, 1])])
lapply(packlist, library, character.only = TRUE)

# Load your data (ensure the `alcohol_data` data frame is properly loaded)
# Example: alcohol_data <- read.csv("path_to_your_data.csv")

# Drop specific states
df <- alcohol_data %>% filter(!(state %in% c(15, 54)))

# Arrange data for time series analysis
df <- df %>% arrange(state, year)

# Create new variables
df <- df %>%
  mutate(
    excise_price = 1 + beer_tax / 100,
    salestax_price = 1 + salestax / 100,
    beer_per_cap = c_beer / population,
    ln_excise_price = log(excise_price),
    ln_salestax_price = log(salestax_price),
    ln_cons_beer = log(beer_per_cap),
    ln_population = log(population),
    ln_income = log(st_income / population),
    ln_unemp_rate = log(st_uemp_rate)
  ) %>%
  arrange(state, year) %>%
  group_by(state) %>%
  mutate(
    dln_population = ln_population - lag(ln_population),
    dln_income = ln_income - lag(ln_income),
    dln_unemp_rate = ln_unemp_rate - lag(ln_unemp_rate),
    dln_excise_price = ln_excise_price - lag(ln_excise_price),
    dln_salestax_price = ln_salestax_price - lag(ln_salestax_price),
    dln_cons_beer = ln_cons_beer - lag(ln_cons_beer)
  ) %>%
  ungroup()

# Table 5 summary statistics chart generation
df <- df %>%
  mutate(beer_per_cap = beer_per_cap * 24 / 2.25) %>%
  mutate(
    policy_change = d_driving_age != 0 | d_bac_teen_02 != 0 | d_lower_limit != 0 | d_bac_10 != 0 | d_bac_08 != 0 | d_admin_license_rev != 0,
    policy_change = ifelse(is.na(d_driving_age), NA, policy_change),
    d21 = da >= 21
  )

# Use `dplyr` to summarise the data
summary_df <- df %>%
  summarise(
    "Per capita beer consumption (cans)" = mean(beer_per_cap, na.rm = TRUE),
    "State beer excise tax ($/case)" = mean(beer_tax, na.rm = TRUE),
    "Sales tax (percent)" = mean(salestax, na.rm = TRUE),
    "Drinking age is 21" = mean(d21, na.rm = TRUE),
    "Any Alcohol Regulation Change" = mean(policy_change, na.rm = TRUE)
  )

# Use `psych` package for detailed descriptive statistics (optional)
describe_df <- psych::describe(df %>% select(beer_per_cap, beer_tax, salestax, d21, policy_change))

# Print summary using kableExtra for better presentation
library(kableExtra)
kable(summary_df, format = "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))

# Print detailed descriptive statistics using kableExtra
kable(describe_df, format = "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))




# TABLE 6: COLUMN 1 BASELINE
baseline_model <- lm(dln_cons_beer ~ dln_excise_price + dln_salestax_price + dln_population + factor(year), data = df)
test <- coeftest(baseline_model, vcov = vcovHC(baseline_model))  # White's heteroskedasticity-robust standard errors
print(summary(baseline_model))
print(test)

# TABLE 6: COLUMN 2 ADD ECONOMIC CONTROLS
economic_model <- lm(dln_cons_beer ~ dln_excise_price + dln_salestax_price + dln_population + dln_income + dln_unemp_rate + factor(year), data = df)
test <- coeftest(economic_model, vcov = vcovHC(economic_model))
print(summary(economic_model))
print(test)

# TABLE 6: COLUMN 3 ADD ALCOHOL POLICY CONTROLS
alcohol_policy_model <- lm(dln_cons_beer ~ dln_excise_price + dln_salestax_price + dln_population + dln_income + dln_unemp_rate + factor(year) + d_bac_teen_02, data = df)
test <- coeftest(alcohol_policy_model, vcov = vcovHC(alcohol_policy_model))
print(summary(alcohol_policy_model))
print(test)

# TABLE 6: COLUMN 4 ADD REGION TRENDS
data$year <- as.factor(data$year)  # Ensure 'year' is treated as a factor
region_trends_model <- lm(dln_cons_beer ~ dln_excise_price + dln_salestax_price + dln_population + dln_income + dln_unemp_rate + factor(year) + factor(region), data = df)
test <- coeftest(region_trends_model, vcov = vcovHC(region_trends_model))
print(summary(region_trends_model))
print(test)

#scatter plots

# Load necessary package
library(ggplot2)

# Assuming your data is stored in a dataframe called `data`

# Filter data for plotting
data_filtered_e <- subset(df, abs(dln_excise_price) < 0.02)
data_filtered_s <- subset(df, abs(dln_salestax_price) < 0.02)


# Calculate the mean of the variable
mean_value <- mean(data_filtered_e$dln_cons_beer, na.rm = TRUE)

# Add a new column with the mean value
data_filtered_e <- data_filtered_e %>%
  mutate(mean_dln_cons_beer = mean_value)


# FIGURES 2A AND 2B

# Load necessary packages
library(dplyr)

# Example data processing (ensure data is correctly processed)
data <- data %>%
  mutate(
    rnd_dlne = round(dln_excise_price * 1000) / 1000,
    rnd_dlns = round(dln_salestax_price * 1000) / 1000
  ) %>%
  group_by(rnd_dlne) %>%
  summarize(mean_dlnc_excise_price = mean(dln_cons_beer, na.rm = TRUE)) %>%
  ungroup() %>%
  group_by(rnd_dlns) %>%
  summarize(mean_dlnc_s = mean(dln_cons_beer, na.rm = TRUE)) %>%
  ungroup()

# Filter data for Figure 2A
data_2a <- subset(data, abs(rnd_dlne) < 0.02)

# Create and display Figure 2A with regression line
plot(
  data_2a$rnd_dlne, 
  data_2a$mean_dlnc_excise_price,
  xlab = "Change in Log(1+Beer Excise Rate)",
  ylab = "Change in Log Per Capita Beer Consumption",
  main = "Figure 2a: Per Capita Beer Consumption and State Beer Excise Taxes",
  pch = 19, col = "blue"
)
# Add a regression line
abline(lm(mean_dlnc_excise_price ~ rnd_dlne, data = data_2a), col = "red")

# Filter data for Figure 2B
data_2b <- subset(data, abs(rnd_dlns) < 0.02)

# Create and display Figure 2B with regression line
plot(
  data_2b$rnd_dlns, 
  data_2b$mean_dlnc_s,
  xlab = "Change in Log(1+Sales Tax Rate)",
  ylab = "Change in Log Per Capita Beer Consumption",
  main = "Figure 2b: Per Capita Beer Consumption and State Sales Taxes",
  pch = 19, col = "blue"
)
# Add a regression line
abline(lm(mean_dlnc_s ~ rnd_dlns, data = data_2b), col = "red")


